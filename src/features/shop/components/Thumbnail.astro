---
import type { AllProductsQuery } from "../../../graphql/storefront/graphql";
import { ROUTES } from "../../../utils/routes";
import CountdownShop from "./CountdownShop";
interface Props {
  product: AllProductsQuery["products"]["nodes"][0];
}
const { product } = Astro.props;
const releaseDate = product.metafields.find(
  (field) => field?.key === "release_date"
)?.value;
---

<a
  href={`${ROUTES.PRODUCTS}/${product.handle}`}
  class={`group flex flex-col gap-y-1 lg:max-w-full relative overflow-hidden ${product.totalInventory === 0 ? "text-gray" : "hover:text-primary text-light"}`}
>
  <!-- Thumbnail Slot -->
  <div class="relative overflow-hidden">
    <!-- Shadow Overlay (Stays in Place) -->
    <div
      style={{
        position: "absolute",
        inset: 0,
        boxShadow: "inset 0px 0px 8px rgba(0, 0, 0, .6)",
        pointerEvents: "none",
        zIndex: 2,
      }}
    >
    </div>
    <!-- SOLD OUT Overlay -->
    {product.totalInventory === 0 && (
      <div 
        class="absolute inset-0 flex items-center justify-center z-10"
      >
        <div 
          class="bg-black bg-opacity-70 px-4 py-2"
          style={{
            fontFamily: "Inter",
            textShadow: "0px 0px 3px rgba(255,255,255,0.6)",
          }}
        >
          <span class="text-white text-opacity-60 text-xl font-bold ">SOLD OUT</span>
        </div>
      </div>
    )}
    <!-- Image Slot -->
    <div
      class={`relative transform transition-transform duration-1000 ease-[0.42, 0, 0.58, 1] disabled:grayscale ${product.totalInventory === 0 ? "grayscale" : "group-hover:scale-105"}`}
      style={{
        zIndex: 1,
      }}
    >
      <slot name="thumbnail" />
    </div>
  </div>

  <!-- Product Info -->
  <div
    class="flex flex-col items-center relative"
    style={{ zIndex: 2 }}
  >
    <!-- Product Title -->
    <h3
      class={`text-[12px] transition-all duration-200 ease-in-out group-hover:[text-decoration:underline] ${product.totalInventory === 0 ? "text-gray" : "text-light group-hover:text-light"}`}
    >
      {product.title.toUpperCase()}
    </h3>

    <!-- Product Price -->
    <p
      class={`text-[12px] transition-all duration-200 ease-in-out ${product.totalInventory === 0 ? "text-gray" : "group-hover:text-light group-hover:[text-decoration:underline] text-light"}`}
    >
      {
        releaseDate ? (
          <CountdownShop
            client:only
            releaseDate={new Date(releaseDate)}
            product={product}
          />
        ) : (
          Number(product.priceRange.minVariantPrice.amount).toFixed(2)
        )
      }
    </p>
  </div>
</a>

<style>
  h3 {
    font-family: "Inter";
    font-weight: bold;
  }
  p {
    font-family: "Inter";
  }
</style>
